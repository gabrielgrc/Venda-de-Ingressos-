3-Planos de iterações (iteraction plan)
Na metodologia ágil, os planos de iterações são os sprints 

Como funciona e como realizar os sprints :

Scrum é uma metodologia ágil para gestão e planejamento de projetos de software.

No Scrum, os projetos são dividos em ciclos (tipicamente mensais) chamados de Sprints. O Sprint representa um Time Box dentro do qual um conjunto de atividades deve ser executado. Metodologias ágeis de desenvolvimento de software são iterativas, ou seja, o trabalho é dividido em iterações, que são chamadas de Sprints no caso do Scrum.

As funcionalidades a serem implementadas em um projeto são mantidas em uma lista que é conhecida como Product Backlog. No início de cada Sprint, faz-se um Sprint Planning Meeting, ou seja, uma reunião de planejamento na qual o Product Owner prioriza os itens do Product Backlog e a equipe seleciona as atividades que ela será capaz de implementar durante o Sprint que se inicia. As tarefas alocadas em um Sprint são transferidas do Product Backlog para o Sprint Backlog.

A cada dia de uma Sprint, a equipe faz uma breve reunião (normalmente de manhã), chamada Daily Scrum. O objetivo é disseminar conhecimento sobre o que foi feito no dia anterior, identificar impedimentos e priorizar o trabalho do dia que se inicia.

Ao final de um Sprint, a equipe apresenta as funcionalidades implementadas em uma Sprint Review Meeting. Finalmente, faz-se uma Sprint Retrospective e a equipe parte para o planejamento do próximo Sprint. Assim reinicia-se o ciclo.

								Prática  
				Sprint mensal (início dia 10/05/2019 e este terá uma duração de ...)

Time box de atividades que devem ser realizadas neste período são as seguintes :
1-Realizar a análise dos requisitos necessários para o sistema de software requerido, para desta forma não haver problemas anteriormente com relação às funcionalidades deste
2-Iniciar a implementação do sistema de software e analisar possíveis dificuldades encontradas
3-


Sprint 1 (15 de maio de 2019 - 16 de maio de 2019) : 
Sprint Planning Meeting : Fazer o Product Backlog e iniciar a implementação
(amanhã será feita a Daily Scrum e a Sprint Retrospective)



	Product Backlog (funcionalidades a serem implementadas em um projeto)

Objetivo : prover suporte à venda de ingressos em uma organização promotora de eventos.
As funcionalidades que o sistema de software em questão terá são :
-Vendas de ingressos para as seguintes classes de evento :
.Teatro
.esporte
.show nacional
.show internacional

-Os usuários poderão obter dados sobre os eventos programados

-Para acessar estes dados, o usuário terá:
.data de início e término de período
.nome da cidade
.sigla do Estado aonde ocorrerá o evento

-O sistema, quando consultado, deverá fornecer os seguintes dados sobre cada evento :
.nome do evento
.código de cada apresentação
.data de cada apresentação
.horário de cada apresentação
.preço do ingresso de cada apresentação
.número da sala de cada apresentação
.quantidade de ingressos disponíveis para cada apresentação
.classe e faixa etária para cada evento

-Um usuário pode:
.comprar ingresso
.cadastrar e editar evento
Obs : para isso precisa se cadastrar e depois ser autenticado informando CPF e senha.

-Para se cadastrar, o usuério terá que:
.informar CPF
.informar senha
.e os seguintes dados de cartão de crédito : número, código de segurança e data de validade

-para adiquirir ingressos, o usuário deve informar : 
.código de apresentação e a quantidade de ingressos desejada 
Obs: Se houver a quantidade de ingressos desejada, o sistema lista os códigos dos ingressos vendidos e atualiza a quantidade de ingressos disponíveis para a apresentação.

-Já autenticado, o usuário tem acesso aos seguintes serviços providos pelo sistema :
.Cadastrar
.Descadastrar
.Alterar evento

-Para cadastrar um evento, o usuério deve informar os seguintes dados associados ao evento:
.código do evento
.nome do evento
.código de cada apresentação
.data de cada apresentação
.horário de cada apresentação
.preço do ingresso de cada apresentação
.código da sala de cada apresentação
.cidade
.estado
.classe
.faixa etária do evento

Obs1 : O usuário que cadastrar um evento é responsável pelo evento e só ele pode alterar ou descadastrar o evento
Obs2 : Um evento não pode ser alterado ou descadastrado se já foi vendido ingresso para alguma das suas apresentações.
Obs3 : Quando um evento é descadastrado, os dados do evento, assim como os dados de suas apresentações, são excluídos do sistema

-O responsável por um evento pode solicitar informação sobre vendas do evento
Obs : Nesse caso, o sistema lista, para cada apresentação do evento, a quantidade total de ingressos vendidos e o CPF de cada comprador de ingresso.

-Cada usuário pode se descadastrar do sistema quando achar conveniente
Obs1 : Entretanto, o descadastramento de um usuário não é realizado se o usuário for responsável por evento que ainda esteja cadastrado.
Obs2:Quando ocorre o descadastramento de um usuário, os dados do usuário são excluídos do sistema

-Cada usuário pode ser responsável por até cinco eventos

-Cada evento cadastrado pode ter até dez apresentações associadas

 
